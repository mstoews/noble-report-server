// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID        int64     `json:"id"`
	Owner     string    `json:"owner"`
	Balance   int64     `json:"balance"`
	Currency  string    `json:"currency"`
	CreatedAt time.Time `json:"created_at"`
}

type Entry struct {
	ID        int64 `json:"id"`
	AccountID int64 `json:"account_id"`
	// can be negative or positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type GlAccount struct {
	Account       int32          `json:"account"`
	Child         int32          `json:"child"`
	ParentAccount pgtype.Bool    `json:"parent_account"`
	Type          pgtype.Text    `json:"type"`
	SubType       pgtype.Text    `json:"sub_type"`
	Description   pgtype.Text    `json:"description"`
	Balance       pgtype.Numeric `json:"balance"`
	Comments      pgtype.Text    `json:"comments"`
	CreateDate    pgtype.Date    `json:"create_date"`
	CreateUser    pgtype.Text    `json:"create_user"`
	UpdateDate    pgtype.Date    `json:"update_date"`
	UpdateUser    pgtype.Text    `json:"update_user"`
}

type GlAccountType struct {
	Type        string      `json:"type"`
	Description pgtype.Text `json:"description"`
	CreateDate  pgtype.Date `json:"create_date"`
	CreateUser  pgtype.Text `json:"create_user"`
	UpdateDate  pgtype.Date `json:"update_date"`
	UpdateUser  pgtype.Text `json:"update_user"`
}

type GlDistribution struct {
	DistParentID int32       `json:"dist_parent_id"`
	DistChildID  int32       `json:"dist_child_id"`
	JournalID    pgtype.Int4 `json:"journal_id"`
	JournalSubid pgtype.Int4 `json:"journal_subid"`
	CreatedDate  pgtype.Date `json:"created_date"`
	UpdateDate   pgtype.Date `json:"update_date"`
	CreatedUser  pgtype.Text `json:"created_user"`
}

type GlDistributionLedger struct {
	Account        int32          `json:"account"`
	Child          int32          `json:"child"`
	Period         int32          `json:"period"`
	PeriodYear     int32          `json:"period_year"`
	Description    pgtype.Text    `json:"description"`
	OpeningBalance pgtype.Numeric `json:"opening_balance"`
	DebitBalance   pgtype.Numeric `json:"debit_balance"`
	CreditBalance  pgtype.Numeric `json:"credit_balance"`
	ClosingBalance pgtype.Numeric `json:"closing_balance"`
	UpdateDate     pgtype.Date    `json:"update_date"`
	CreatedUser    pgtype.Text    `json:"created_user"`
}

type GlFund struct {
	Fund        string      `json:"fund"`
	Description pgtype.Text `json:"description"`
	CreateDate  pgtype.Date `json:"create_date"`
	CreateUser  pgtype.Text `json:"create_user"`
}

type GlJournalDetail struct {
	JournalID    int32          `json:"journal_id"`
	JournalSubid int32          `json:"journal_subid"`
	Account      pgtype.Int4    `json:"account"`
	Child        pgtype.Int4    `json:"child"`
	SubType      pgtype.Text    `json:"sub_type"`
	Description  pgtype.Text    `json:"description"`
	Debit        pgtype.Numeric `json:"debit"`
	Credit       pgtype.Numeric `json:"credit"`
	CreateDate   pgtype.Date    `json:"create_date"`
	CreateUser   pgtype.Text    `json:"create_user"`
}

type GlJournalHeader struct {
	JournalID       int32          `json:"journal_id"`
	Description     pgtype.Text    `json:"description"`
	Booked          pgtype.Bool    `json:"booked"`
	BookedDate      pgtype.Date    `json:"booked_date"`
	BookedUser      pgtype.Text    `json:"booked_user"`
	CreateDate      pgtype.Date    `json:"create_date"`
	CreateUser      pgtype.Text    `json:"create_user"`
	Period          pgtype.Int4    `json:"period"`
	TransactionDate pgtype.Date    `json:"transaction_date"`
	Status          pgtype.Text    `json:"status"`
	Type            pgtype.Text    `json:"type"`
	Amount          pgtype.Numeric `json:"amount"`
}

type GlPeriod struct {
	PeriodID    int32       `json:"period_id"`
	PeriodYear  int32       `json:"period_year"`
	StartDate   pgtype.Date `json:"start_date"`
	EndDate     pgtype.Date `json:"end_date"`
	Description pgtype.Text `json:"description"`
	CreateDate  pgtype.Date `json:"create_date"`
	CreateUser  pgtype.Text `json:"create_user"`
	UpdateDate  pgtype.Date `json:"update_date"`
	UpdateUser  pgtype.Text `json:"update_user"`
}

type GlTrialBalance struct {
	Account            string         `json:"account"`
	Child              string         `json:"child"`
	StartDate          pgtype.Date    `json:"start_date"`
	EndDate            pgtype.Date    `json:"end_date"`
	AccountingPeriodID pgtype.Int4    `json:"accounting_period_id"`
	Description        pgtype.Text    `json:"description"`
	Type               pgtype.Text    `json:"type"`
	Debit              pgtype.Numeric `json:"debit"`
	Credit             pgtype.Numeric `json:"credit"`
	CreateDate         pgtype.Date    `json:"create_date"`
	CreateUser         pgtype.Text    `json:"create_user"`
	UpdateDate         pgtype.Date    `json:"update_date"`
	UpdateUser         pgtype.Text    `json:"update_user"`
}

type KbPriority struct {
	Priority    string      `json:"priority"`
	Description pgtype.Text `json:"description"`
	Updatedte   pgtype.Date `json:"updatedte"`
	Updateusr   pgtype.Text `json:"updateusr"`
}

type KbStatus struct {
	Status      string           `json:"status"`
	Description pgtype.Text      `json:"description"`
	Updatedte   pgtype.Timestamp `json:"updatedte"`
	Updateusr   pgtype.Text      `json:"updateusr"`
}

type KbSubtask struct {
	TaskID   string      `json:"task_id"`
	Subid    string      `json:"subid"`
	Desc     pgtype.Text `json:"desc"`
	Status   pgtype.Text `json:"status"`
	Summary  pgtype.Text `json:"summary"`
	Type     pgtype.Text `json:"type"`
	Estimate pgtype.Int4 `json:"estimate"`
}

type KbTask struct {
	TaskID       string      `json:"task_id"`
	Title        pgtype.Text `json:"title"`
	Status       pgtype.Text `json:"status"`
	Summary      pgtype.Text `json:"summary"`
	Type         pgtype.Text `json:"type"`
	Priority     pgtype.Text `json:"priority"`
	Tags         pgtype.Text `json:"tags"`
	Estimate     pgtype.Int4 `json:"estimate"`
	Assignee     pgtype.Text `json:"assignee"`
	Rankid       pgtype.Int4 `json:"rankid"`
	Color        pgtype.Text `json:"color"`
	Classname    pgtype.Text `json:"classname"`
	Dependencies pgtype.Text `json:"dependencies"`
	Description  pgtype.Text `json:"description"`
	DueDate      pgtype.Date `json:"due_date"`
	StartDate    pgtype.Date `json:"start_date"`
}

type KbTeam struct {
	TeamMember string           `json:"team_member"`
	FirstName  pgtype.Text      `json:"first_name"`
	LastName   pgtype.Text      `json:"last_name"`
	Location   pgtype.Text      `json:"location"`
	Title      pgtype.Text      `json:"title"`
	Updatedte  pgtype.Timestamp `json:"updatedte"`
	Updateusr  pgtype.Text      `json:"updateusr"`
}

type KbType struct {
	Type        string           `json:"type"`
	Description pgtype.Text      `json:"description"`
	Updatedte   pgtype.Timestamp `json:"updatedte"`
	Updateusr   pgtype.Text      `json:"updateusr"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Transfer struct {
	ID            int64 `json:"id"`
	FromAccountID int64 `json:"from_account_id"`
	ToAccountID   int64 `json:"to_account_id"`
	// must be positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	Username          string    `json:"username"`
	HashedPassword    string    `json:"hashed_password"`
	FullName          string    `json:"full_name"`
	Email             string    `json:"email"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
	IsEmailVerified   bool      `json:"is_email_verified"`
	Role              string    `json:"role"`
}

type VerifyEmail struct {
	ID         int64     `json:"id"`
	Username   string    `json:"username"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
	IsUsed     bool      `json:"is_used"`
	CreatedAt  time.Time `json:"created_at"`
	ExpiredAt  time.Time `json:"expired_at"`
}
