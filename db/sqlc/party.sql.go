// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: party.sql

package db

import (
	"context"
)

const listParties = `-- name: ListParties :many
SELECT pty_partyref, pty_category, pty_longdesc, pty_holiday, pty_country, pty_location, pty_shrtdesc, pty_partynam1, pty_partynam2, pty_partynam3, pty_active, pty_verdat
FROM pty_party
LIMIT 1000
`

func (q *Queries) ListParties(ctx context.Context) ([]PtyParty, error) {
	rows, err := q.db.QueryContext(ctx, listParties)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []PtyParty{}
	for rows.Next() {
		var i PtyParty
		if err := rows.Scan(
			&i.PtyPartyref,
			&i.PtyCategory,
			&i.PtyLongdesc,
			&i.PtyHoliday,
			&i.PtyCountry,
			&i.PtyLocation,
			&i.PtyShrtdesc,
			&i.PtyPartynam1,
			&i.PtyPartynam2,
			&i.PtyPartynam3,
			&i.PtyActive,
			&i.PtyVerdat,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
